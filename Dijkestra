**Dijkestra Algorithm to find the Single Source shortest path if all the weights are positive

for(int i=1; i<=nodesN; i++)
{
    dist[i] = INF;
}


void dijkestra(int s)
{
    priority_queue<ii, vector<ii>, greater<ii> > pq;
    dist[s] = 0;
    pq.push(ii(0, s)); // Distance, Node
    while(pq.empty() == false)
    {
        ii top = pq.top();
        int nowNode = top.second;
        int minDist = top.first;
        pq.pop();
        if(minDist == dist[nowNode])
        {
            for(int i=0; i<(int)adjList[nowNode].size(); i++)
            {
                ii next = adjList[nowNode][i];
                int nextNode = next.first;
                int weight = next.second;
                if(dist[nowNode] + weight < dist[nextNode])
                {
                    dist[nextNode] = dist[nowNode] + weight;
                    pq.push(ii(dist[nextNode], nextNode));
                }
            }
        }

    }
}
